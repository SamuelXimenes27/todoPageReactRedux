{"ast":null,"code":"var _jsxFileName = \"/home/samuelximenes/Documentos/Trab.Eng.Software/todoReduxBootstrap-Eng.Soft/src/components/PaginationComponent.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Pagination from 'react-bootstrap/Pagination';\n\nclass PaginationComponent extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      pager: {}\n    };\n  }\n\n  componentWillMount() {\n    // set page if items array isn't empty\n    if (this.props.items && this.props.items.length) {\n      this.setPage(this.props.initialPage);\n    }\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    // reset page if items array has changed\n    if (this.props.items !== prevProps.items) {\n      this.setPage(this.props.initialPage);\n    }\n  }\n\n  setPage(page) {\n    let {\n      items,\n      pageSize\n    } = this.props; //console.log(`setPage: ${JSON.stringify(page)} ${pager.totalPages}`)\n\n    if (page < 1) {\n      return;\n    } // get new pager object for specified page\n\n\n    let pagerTemp = this.getPager(items.length, page, pageSize); // get new page of items from items array\n\n    let pageOfItems = items.slice(pagerTemp.startIndex, pagerTemp.endIndex + 1); // update state\n\n    this.setState({\n      pager: pagerTemp\n    }); // call change page function in parent component\n\n    this.props.onChangePage(pageOfItems);\n  }\n\n  getPager(totalItems, currentPage, pageSize) {\n    // default to first page\n    currentPage = currentPage || 1; // default page size is 10\n\n    pageSize = pageSize || 10; // calculate total pages\n\n    var totalPages = Math.ceil(totalItems / pageSize);\n    var startPage, endPage;\n\n    if (totalPages <= 10) {\n      // less than 10 total pages so show all\n      startPage = 1;\n      endPage = totalPages;\n    } else {\n      // more than 10 total pages so calculate start and end pages\n      if (currentPage <= 6) {\n        startPage = 1;\n        endPage = 10;\n      } else if (currentPage + 4 >= totalPages) {\n        startPage = totalPages - 9;\n        endPage = totalPages;\n      } else {\n        startPage = currentPage - 5;\n        endPage = currentPage + 4;\n      }\n    } // calculate start and end item indexes\n\n\n    var startIndex = (currentPage - 1) * pageSize;\n    var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1); // create an array of pages to ng-repeat in the pager control\n\n    var pages = [...Array(endPage + 1 - startPage).keys()].map(i => startPage + i); // return object with all pager properties required by the view\n\n    return {\n      totalItems: totalItems,\n      currentPage: currentPage,\n      pageSize: pageSize,\n      totalPages: totalPages,\n      startPage: startPage,\n      endPage: endPage,\n      startIndex: startIndex,\n      endIndex: endIndex,\n      pages: pages\n    };\n  }\n\n  render() {\n    var pager = this.state.pager;\n\n    if (!pager.pages || pager.pages.length <= 1) {\n      // don't display pager if there is only 1 page\n      return null;\n    }\n\n    return /*#__PURE__*/React.createElement(Pagination, {\n      size: \"lg\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Pagination.First, {\n      className: pager.currentPage === 1 ? 'disabled' : '',\n      onClick: () => this.setPage(1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Pagination.Prev, {\n      className: pager.currentPage === 1 ? 'disabled' : '',\n      onClick: () => this.setPage(pager.currentPage - 1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 17\n      }\n    }), pager.pages.map((page, index) => /*#__PURE__*/React.createElement(Pagination.Item, {\n      key: index,\n      className: pager.currentPage === page ? 'active' : '',\n      onClick: () => this.setPage(page),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 21\n      }\n    }, page)), /*#__PURE__*/React.createElement(Pagination.Next, {\n      className: pager.currentPage === pager.totalPages ? 'disabled' : '',\n      onClick: () => this.setPage(pager.currentPage + 1),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(Pagination.Last, {\n      className: pager.currentPage === pager.totalPages ? 'disabled' : '',\n      onClick: () => this.setPage(pager.totalPages),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\nconst propTypes = {\n  items: PropTypes.array.isRequired,\n  onChangePage: PropTypes.func.isRequired,\n  initialPage: PropTypes.number,\n  pageSize: PropTypes.number\n};\nconst defaultProps = {\n  initialPage: 1,\n  pageSize: 5\n};\nPaginationComponent.propTypes = propTypes;\nPaginationComponent.defaultProps = defaultProps;\nexport default PaginationComponent;","map":{"version":3,"names":["React","Component","PropTypes","Pagination","PaginationComponent","constructor","props","state","pager","componentWillMount","items","length","setPage","initialPage","componentDidUpdate","prevProps","prevState","page","pageSize","pagerTemp","getPager","pageOfItems","slice","startIndex","endIndex","setState","onChangePage","totalItems","currentPage","totalPages","Math","ceil","startPage","endPage","min","pages","Array","keys","map","i","render","index","propTypes","array","isRequired","func","number","defaultProps"],"sources":["/home/samuelximenes/Documentos/Trab.Eng.Software/todoReduxBootstrap-Eng.Soft/src/components/PaginationComponent.js"],"sourcesContent":["import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport Pagination from 'react-bootstrap/Pagination';\n\nclass PaginationComponent extends Component {\n    constructor(props) {\n        super(props);\n        this.state = { pager: {} };\n    }\n\n    componentWillMount() {\n        // set page if items array isn't empty\n        if (this.props.items && this.props.items.length) {\n            this.setPage(this.props.initialPage);\n        }\n\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        // reset page if items array has changed\n        if (this.props.items !== prevProps.items) {\n            this.setPage(this.props.initialPage);\n        }\n    }\n\n    setPage(page) {\n\n        let { items, pageSize } = this.props;\n\n        //console.log(`setPage: ${JSON.stringify(page)} ${pager.totalPages}`)\n        if (page < 1) {\n            return;\n        }\n\n        // get new pager object for specified page\n        let pagerTemp = this.getPager(items.length, page, pageSize);\n\n        // get new page of items from items array\n        let pageOfItems = items.slice(pagerTemp.startIndex, pagerTemp.endIndex + 1);\n\n        // update state\n        this.setState({ pager: pagerTemp });\n\n        // call change page function in parent component\n        this.props.onChangePage(pageOfItems);\n    }\n\n    getPager(totalItems, currentPage, pageSize) {\n        // default to first page\n        currentPage = currentPage || 1;\n\n        // default page size is 10\n        pageSize = pageSize || 10;\n\n        // calculate total pages\n        var totalPages = Math.ceil(totalItems / pageSize);\n\n        var startPage, endPage;\n        if (totalPages <= 10) {\n            // less than 10 total pages so show all\n            startPage = 1;\n            endPage = totalPages;\n        } else {\n            // more than 10 total pages so calculate start and end pages\n            if (currentPage <= 6) {\n                startPage = 1;\n                endPage = 10;\n            } else if (currentPage + 4 >= totalPages) {\n                startPage = totalPages - 9;\n                endPage = totalPages;\n            } else {\n                startPage = currentPage - 5;\n                endPage = currentPage + 4;\n            }\n        }\n\n        // calculate start and end item indexes\n        var startIndex = (currentPage - 1) * pageSize;\n        var endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\n\n        // create an array of pages to ng-repeat in the pager control\n        var pages = [...Array((endPage + 1) - startPage).keys()].map(i => startPage + i);\n\n        // return object with all pager properties required by the view\n        return {\n            totalItems: totalItems,\n            currentPage: currentPage,\n            pageSize: pageSize,\n            totalPages: totalPages,\n            startPage: startPage,\n            endPage: endPage,\n            startIndex: startIndex,\n            endIndex: endIndex,\n            pages: pages\n        };\n    }\n\n    render() {\n        var pager = this.state.pager;\n\n        if (!pager.pages || pager.pages.length <= 1) {\n            // don't display pager if there is only 1 page\n            return null;\n        }\n\n        return (\n            <Pagination size=\"lg\">\n                <Pagination.First className={pager.currentPage === 1 ? 'disabled' : ''} onClick={() => this.setPage(1)} />\n                <Pagination.Prev className={pager.currentPage === 1 ? 'disabled' : ''} onClick={() => this.setPage(pager.currentPage - 1)} />\n                {pager.pages.map((page, index) =>\n                    <Pagination.Item key={index} className={pager.currentPage === page ? 'active' : ''} onClick={() => this.setPage(page)}>{page}</Pagination.Item>\n                )}\n                <Pagination.Next className={pager.currentPage === pager.totalPages ? 'disabled' : ''} onClick={() => this.setPage(pager.currentPage + 1)} />\n                <Pagination.Last className={pager.currentPage === pager.totalPages ? 'disabled' : ''} onClick={() => this.setPage(pager.totalPages)} />\n            </Pagination>\n\n        );\n    }\n}\nconst propTypes = {\n    items: PropTypes.array.isRequired,\n    onChangePage: PropTypes.func.isRequired,\n    initialPage: PropTypes.number,\n    pageSize: PropTypes.number\n}\n\nconst defaultProps = {\n    initialPage: 1,\n    pageSize: 5\n}\n\nPaginationComponent.propTypes = propTypes;\nPaginationComponent.defaultProps = defaultProps;\nexport default PaginationComponent;"],"mappings":"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"},"metadata":{},"sourceType":"module"}